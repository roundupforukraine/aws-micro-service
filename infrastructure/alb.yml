AWSTemplateFormatVersion: '2010-09-09'
Description: 'Application Load Balancer for aws-micro-service'

Resources:
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ALB
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${AWS::StackName}-alb
      Scheme: internet-facing
      Type: application
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${AWS::StackName}-tg
      Port: 3000
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref VPCId
      HealthCheckPath: /health
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3

Parameters:
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID

  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: First public subnet

  PublicSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: Second public subnet

Outputs:
  ALBDNSName:
    Description: DNS name of the load balancer
    Value: !GetAtt ALB.DNSName

  ALBTargetGroupArn:
    Description: ARN of the target group
    Value: !Ref ALBTargetGroup 